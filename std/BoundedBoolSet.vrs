import Array
import ceil from "std/math.vrs"

class BoundedBoolSet U32 size|
	Array data: new Array(ceil(size / 8.0))
	add => U32 index
		data[index / 8] |= 1 << (index % 8)
	remove => U32 index
		data[index / 8] &= ~(1 << (index % 8))
	Bool has => U32 index
		data[index / 8] >> (index % 8) & 1
	U32 findEmpty =>
		U16 n = 0
		U8 extra = data.length * 8 - data.length
		while n < data.length - 1
			if data[n] != 255
				break
		U8 byte = this.data[n]
		U8 i = 0
		while i < end
			if (byte >> i & 1) == 0
				break
		return n * 8 + i
